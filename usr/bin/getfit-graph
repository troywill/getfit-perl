#!/usr/bin/env perl
use warnings;
use strict;
use PDF::API3::Compat::API2;
use PDF::API3::Compat::API2::Util;
use lib '/usr/lib/perl5';
use Getfit::ConfigReader::Simple;
use Getfit::Statistics;

my $config_file = shift or die "/var/lib/getfit-troy/configrc"; # e.g. /var/lib/getfit-troy/configrc

#################### Begin Config Section ##################
my $config = ConfigReader::Simple->new($config_file);
my $initial_time = $config->get('START_TIME');
my $OUTFILE = $config->get('OUTFILE');
## Graph Constants
my $SCALE_DATA_FILE=$config->get('SCALE_DATA_FILE');
my $MIN_WEIGHT=$config->get('GRAPH_MIN_WEIGHT');
my $MAX_WEIGHT=$config->get('GRAPH_MAX_WEIGHT');
my $START_TIME=$config->get('START_TIME');
my $START_WEIGHT=$config->get('START_WEIGHT');
my $MIN_TIME = $START_TIME;
my $MAX_TIME = $config->get('GRAPH_MAX_TIME');

my $XMAX = 792;
my $YMAX = 612;

my $font_height = 8;
my $spacer = 2;

my $LEFT = 20;
my $RIGHT = $XMAX - 20;
my $UPPER_RECT = $YMAX - 20;
my $LOWER_RECT = 80;

# Circle Constants
my $RADIUS = 2;

my $TEXT_LEFT = 40;
my $TEXT_TOP = $LOWER_RECT - 18;
#################### End Config Section ##################

my $pdf=PDF::API3::Compat::API2->new;
my $font=$pdf->corefont('Verdana');
my $page = $pdf->page;
$page->mediabox(792,612); # Letter Landscape
my $gfx=$page->gfx;

&plot_start_weight;
&plot_weights;
&draw_rectangle;
&draw_goal_line;
&draw_top_goal_line;

$pdf->saveas($OUTFILE);
$pdf->end();

sub draw_legend {
    ################# Text ##########
    $gfx->textlabel($TEXT_LEFT,$TEXT_TOP,$font,$font_height,"Troy Will");
    my $current_goal = sprintf( "%.2f", $Marv::Statistics::Current_goal);
    $gfx->textlabel($TEXT_LEFT,($TEXT_TOP-$font_height),$font,$font_height,  "Current Goal: $current_goal");
# $gfx->textlabel($TEXT_LEFT,($TEXT_TOP-$font_height),$font,$font_height,  "Beginning Unix Time: ");
    $gfx->textlabel($TEXT_LEFT,($TEXT_TOP-2*$font_height),$font,$font_height,"Beginning Weight: 183.6");
    chomp( my $date = `date` );
    my $string = 'Current Unix Time: ' . time . " ($date)";
    $gfx->textlabel($TEXT_LEFT,($TEXT_TOP-3*$font_height),$font,$font_height,$string);
    $gfx->textlabel($TEXT_LEFT,($TEXT_TOP-4*$font_height),$font,$font_height,"Current Weight: $current_goal");
}

sub calculate_plot_point {
    my ( $weight, $time ) = @_;
    my ( $xscale, $yscale ) = &scale;
    my $x = $LEFT + $xscale * ( $time - $MIN_TIME );
    my $y = $LOWER_RECT + $yscale * ( $weight - $MIN_WEIGHT );
    return ( $x, $y );
}

sub scale {
    my $points_per_pound =  ( $UPPER_RECT - $LOWER_RECT ) / ( $MAX_WEIGHT - $MIN_WEIGHT );
    my $points_per_second = ( $RIGHT - $LEFT ) / ( $MAX_TIME - $MIN_TIME );
    return ( $points_per_second, $points_per_pound );
}

sub plot_start_weight {
    my ( $x, $y ) = &calculate_plot_point ( $START_WEIGHT, $START_TIME );
    $gfx->circle($x,$y,$RADIUS);
}

sub plot_weights {
    $gfx->strokecolor('lightblue');
    open( my $OUT, '<', $SCALE_DATA_FILE ) or die "Unable to open data file: $!";
    $_ = <$OUT>;
    my ( $time, $weight ) = split();
    my ( $x, $y ) = &calculate_plot_point ( $weight, $time );
    $gfx->circle($x,$y,$RADIUS);
    $gfx->move($x,$y);
    while (<$OUT>) {
	my ( $time, $weight ) = split;
	my ( $x, $y ) = &calculate_plot_point ( $weight, $time );
	$gfx->line($x,$y);
	$gfx->circle($x,$y,$RADIUS);
	$gfx->move($x,$y);
    }
    $gfx->stroke;
}

sub draw_rectangle {
    my @origin = ( $LEFT, $UPPER_RECT );
    $gfx->move($origin[0],$origin[1]);
    $gfx->line($RIGHT, $UPPER_RECT);
    $gfx->line($RIGHT,$LOWER_RECT);
    $gfx->line($LEFT, $LOWER_RECT);
    $gfx->line($LEFT, $UPPER_RECT);
    $gfx->stroke;
}

sub draw_goal_line {
    my $time = time;
    my $CALS_PER_DAY=$config->get('CALS_PER_DAY');
    my $GOAL_START_TIME = $config->get('GOAL_START_TIME');
    my $GOAL_START_WEIGHT = $config->get('GOAL_START_WEIGHT');
    my ( $x1, $y1 ) = &calculate_plot_point (  $GOAL_START_WEIGHT, $GOAL_START_TIME );
    $gfx->move($x1,$y1);
    $gfx->linedash(2,4);

    my $goal_weight = $GOAL_START_WEIGHT - ( $MAX_TIME - $GOAL_START_TIME ) * ( $CALS_PER_DAY / 3500 / 86400 );
    my ( $x2, $y2 ) = &calculate_plot_point ( $goal_weight, $MAX_TIME );
    $gfx->line($x2,$y2);

    $gfx->stroke;
}
sub draw_top_goal_line {
    my $time = time;
    my ( $x, $y ) = &calculate_plot_point ( 189.4, 1277689877 );
    $gfx->move($x,$y);
    $gfx->linedash(2,4);
    my $goal_weight = 189.4 - ( $MAX_TIME - 1277689877 ) * ( 1000 / 3500 / 86400 );  
    my ( $x1, $y1 ) = &calculate_plot_point ( $goal_weight, $MAX_TIME );
    $gfx->strokecolor('#FF0000');
    $gfx->line($x1,$y1);
    $gfx->stroke;
}

exit;
